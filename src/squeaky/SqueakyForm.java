package squeaky;

import java.awt.HeadlessException;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * * * * @author Rangarajan
 */
public class SqueakyForm extends javax.swing.JFrame {

    private static File errorLog;
    private static JFileChooser chooser;
    private static Thread mainProcess;
    private static DefaultTableModel tableModel;
    private static DefaultTableModel driveModel;
    private static long indexBytesDone, driveBytesDone, driveTotalBytes;
    private static int selectedRow = -1, mode = -1;
    private static TimerTask updateDriveUITask;
    private static boolean stopFlag, processFlag, continueFlag;
    private static final String NEWLINE = System.getProperty("line.separator");
    private static final int FILE_SHRED_MODE = 1, DRIVE_WIPE_MODE = 2;
    private static final ArrayList<JComponent> FILEUIELEMENTS = new ArrayList<>(5);
    private static final ArrayList<JComponent> DRIVEUIELEMENTS = new ArrayList<>(5);
    private static final ArrayList<CountMS> COUNTOBJECTS = new ArrayList<>(5);
    private static final java.util.Timer TIMER = new java.util.Timer();
    private static final CountMS OBJECT = new CountMS();

    public SqueakyForm() {
        initComponents();

        URL iconURL = getClass().getResource("Images/IconImage.png");
        ImageIcon icon = new ImageIcon(iconURL);
        jFrame1.setIconImage(icon.getImage());

        tableModel = (DefaultTableModel) jTable1.getModel();
        driveModel = (DefaultTableModel) jTable2.getModel();
        for (File x : File.listRoots()) {
            driveModel.addRow(new Object[]{x, "Idle"});
        }
        FILEUIELEMENTS.add(jTable1);
        FILEUIELEMENTS.add(jButton2);
        FILEUIELEMENTS.add(jButton4);
        FILEUIELEMENTS.add(jButton3);
        DRIVEUIELEMENTS.add(jTable2);
        DRIVEUIELEMENTS.add(jButton6);
        DRIVEUIELEMENTS.add(jCheckBox1);
        DRIVEUIELEMENTS.add(jTextField2);
        DRIVEUIELEMENTS.add(jTextField3);
        jRadioButton1.doClick();

        jFrame1.setTitle("Squeaky");
        jFrame1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jFrame1.setResizable(false);
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(null);
        jFrame1.setVisible(true);

        int a = (jTable2.getColumnModel().getColumn(0).getWidth());
        int b = (jTable2.getColumnModel().getColumn(1).getWidth());
        int x = (int) (0.8 * (a + b));
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(x);
        a = (jTable1.getColumnModel().getColumn(0).getWidth());
        b = (jTable1.getColumnModel().getColumn(1).getWidth());
        int c = (jTable1.getColumnModel().getColumn(2).getWidth());
        x = (int) (0.6 * (a + b + c));
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(x);
        x = (int) (0.2 * (a + b + c));
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(x);

        jButton8.doClick();
    }

    /**
     * * * This method is called from within the constructor to initialize the * form. * WARNING: Do NOT modify this code. The content of this method is *
     * always * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jProgressBar2 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jProgressBar3 = new javax.swing.JProgressBar();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();

        jFrame1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Error Log:");

        jTextField1.setEditable(false);
        jTextField1.setText("C:/Program Files/Squeaky/Error Log.txt");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Make a file or directory unrecoverable");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Wipe Free Space for an entire drive (slower)");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jProgressBar2.setStringPainted(true);

        jLabel3.setText("Overall Progress");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Location", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Add File/Directory");
        jButton2.setPreferredSize(new java.awt.Dimension(150, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Remove");
        jButton3.setPreferredSize(new java.awt.Dimension(150, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Start");
        jButton4.setPreferredSize(new java.awt.Dimension(150, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setText("Select Drives");

        jLabel5.setText("Drive Progress");

        jProgressBar3.setStringPainted(true);

        jButton6.setText("Start");
        jButton6.setPreferredSize(new java.awt.Dimension(150, 25));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drive", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane3.setViewportView(jTable2);

        jButton8.setText("Test");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(48, 48, 48)
                        .addComponent(jProgressBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(182, 182, 182))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)
                            .addComponent(jButton8)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Settings");

        jCheckBox1.setText("Contine wiping progress");

        jLabel7.setText("Buffer Size:");

        jTextField2.setText("16");

        jLabel8.setText("KB");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Not recommended.\n\nWill not overwrite bytes in the \"Wiper\" file in the drive, if aborted previously.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("Determines the size of the buffer clearing a drive. \n\nHigher means faster, but too high can be fatal.\n\nDefault: 16KB");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane4.setViewportView(jTextArea2);

        jLabel9.setText("Number of passes:");

        jTextField3.setText("1");

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("Determines the number of times each drive will be cleared.\n\nDefault: 1");
        jTextArea3.setWrapStyleWord(true);
        jScrollPane5.setViewportView(jTextArea3);

        jButton7.setText("Abort All ");
        jButton7.setPreferredSize(new java.awt.Dimension(150, 25));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator4)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addComponent(jSeparator6)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int choice = chooser.showOpenDialog(jFrame1);
        if (choice == JFileChooser.APPROVE_OPTION) {
            try {
                jTextField1.setText((chooser.getSelectedFile().getCanonicalPath() + "/Squeaky - Error Log.txt").replace("\\", "/"));
            } catch (IOException ex) {
                handle(ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        mode = FILE_SHRED_MODE;
        enableDriveUIElements(false);
        enableFileUIElements(true);
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        mode = DRIVE_WIPE_MODE;
        enableDriveUIElements(true);
        enableFileUIElements(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int choice = chooser.showOpenDialog(jFrame1);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            try {
                String path = f.getCanonicalPath().replace("\\", "/");
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    if (jTable1.getValueAt(i, 1).equals(path)) {
                        JOptionPane.showMessageDialog(jFrame1, "You've already added that file.", "Squeaky", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }
                }
                String x = f.isFile() ? "File" : "Directory";
                tableModel.addRow(new Object[]{x, path, "Idle"});
            } catch (IOException | HeadlessException ex) {
                handle(ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int index = jTable1.getSelectedRow();
        if (index > -1) {
            tableModel.removeRow(index);
        } else {
            JOptionPane.showMessageDialog(jFrame1, "You need to select a file", "Squeaky - No file Selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int totalIndex = jTable1.getRowCount();
        if (totalIndex == 0) {
            return;
        }
        if (JOptionPane.showConfirmDialog(jFrame1, "Are you sure? all selected files will be permanently deleted, beyond recovery.", "Squeaky - Confirm action", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
            mainProcess = new Thread(new Runnable() {
                @Override
                public void run() {
                    enableGUI(false);
                    stopFlag = false;
                    processFlag = true;
                    resetAll();
                    for (int i = 0; i < totalIndex; i++) {
                        indexBytesDone = 0;
                        CountMS object = new CountMS();
                        object.startTimer();
                        tableModel.setValueAt("Processing", i, 2);
                        String x = (String) jTable1.getValueAt(i, 1);
                        if (x != null) {
                            File y = new File(x);
                            deleteFile(y);
                        }
                        tableModel.setValueAt("Cleared " + (indexBytesDone / 1024.0 / 1024.0) + " MB (" + indexBytesDone + " bytes) in " + object.stopTimer() + " ms", i, 2);
                        if (stopFlag) {
                            break;
                        }
                        jProgressBar2.setValue((i + 1) * 100 / totalIndex);
                    }
                    enableGUI(true);
                }
            });
            mainProcess.start();
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        if (jTable2.getSelectedRow() == -1) {
            return;
        }
        mainProcess = new Thread(new Runnable() {
            @Override
            public void run() {
                continueFlag = jCheckBox1.isSelected();
                processFlag = true;
                enableGUI(false);
                resetAll();
                driveBytesDone = 0;
                stopFlag = false;
                updateDriveUITask = new TimerTask() {
                    @Override
                    public void run() {
                        if (driveTotalBytes > 0) {
                            jProgressBar3.setValue((int) ((driveBytesDone * 100) / driveTotalBytes));
                        }
                    }
                };
                int noPasses = Integer.parseInt(jTextField3.getText().trim());
                boolean firstFlag = true;
                for (int i : jTable2.getSelectedRows()) {
                    jTable2.clearSelection();
                    selectedRow = i;
                    for (int z = 1; z <= noPasses; z++) {
                        OBJECT.startTimer();
                        File drive = (File) jTable2.getValueAt(selectedRow, 0);
                        try {
                            String x = drive.getCanonicalPath().replace("\\", "/");
                            driveTotalBytes = drive.getUsableSpace();
                            File tempFile = new File(x + "Wiper");
                            driveBytesDone = 0;
                            if (firstFlag) {
                                driveBytesDone = continueFlag ? tempFile.length() : 0;
                                TIMER.scheduleAtFixedRate(updateDriveUITask, 0, 5);
                            } else {
                                tempFile.delete();
                            }
                            int bufferedSize = Integer.parseInt(jTextField2.getText().trim()) * 1024;
                            jTable2.setValueAt("Processing (Pass " + z + " of " + noPasses + ")", selectedRow, 1);
                            try (BufferedOutputStream threadWriter = new BufferedOutputStream(new FileOutputStream(tempFile, continueFlag), bufferedSize)) {
                                for (long o = 0; o < driveTotalBytes; o++) {
                                    if (stopFlag) {
                                        break;
                                    }
                                    try {
                                        threadWriter.write(0);
                                        driveBytesDone++;
                                    } catch (IOException ex1) {
                                        if (ex1.getMessage().toLowerCase().contains("not enough space")) {
                                            break;
                                        } else {
                                            handle(ex1);
                                        }
                                    }
                                }
                                if (!stopFlag) {
                                    try {
                                        threadWriter.close();
                                    } catch (IOException ex2) {
                                        if (!ex2.getMessage().toLowerCase().contains("not enough space")) {
                                            handle(ex2);
                                        }
                                    }
                                    if (!tempFile.delete()) {
                                        throw new IOException("Please run as administrator.");
                                    }
                                }
                                long ms = OBJECT.stopTimer();
                                jTable2.setValueAt("Cleared " + Double.toString(driveBytesDone / 1024.0 / 1024.0 / 1024.0) + " GB (" + driveBytesDone + " Bytes) in " + (ms / 1000.0 / 60.0) + " minutes. (" + ms + " ms) Pass(" + z + "/" + noPasses + ")", selectedRow, 1);
                            }
                        } catch (IOException ex) {
                            handle(ex);
                        }
                        firstFlag = false;
                    }
                }
                updateDriveUITask.cancel();
                processFlag = false;
                enableGUI(true);

            }
        });
        mainProcess.start();
    }//GEN-LAST:event_jButton6ActionPerformed
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        if (processFlag) {
            if (mode == DRIVE_WIPE_MODE) {
                if (JOptionPane.showConfirmDialog(jFrame1, "Are you sure you want to abort?", "Squeaky - Confirm action", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    try {
                        stopFlag = true;
                        if (selectedRow != -1) {
                            jTable2.setValueAt("Aborted", selectedRow, 1);
                        }
                        //mainProcess.interrupt();
                        resetAll();
                        updateDriveUITask.cancel();
                    } catch (NullPointerException ex) {
                    }
                    processFlag = false;
                    enableGUI(true);
                }
            } else if (mode == FILE_SHRED_MODE) {
                if (JOptionPane.showConfirmDialog(jFrame1, "Aborting now necessitates a full drive wipe to securely erase the files. \n\nAre you sure you want to abort?", "Squeaky - Confirm Action", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.YES_OPTION) {
                    try {
                        stopFlag = true;
                        //mainProcess.interrupt();

                    } catch (NullPointerException ex) {
                    }
                    resetAll();
                    processFlag = false;
                    enableGUI(true);
                }
            }
        } else {
            JOptionPane.showMessageDialog(jFrame1, "No processes are running.", "Squeaky - Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try {

            File path = new File(jTextField1.getText());
            if (!path.exists()) {
                path.getParentFile().mkdirs();
                if (!path.createNewFile()) {
                    throw new IOException();
                }
            } else {
                new FileWriter(path, true).write(System.getProperty("line.separator") + "Started");
            }
            JOptionPane.showMessageDialog(jFrame1, "Test successful", "Squeaky - Error Log", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(jFrame1, "Error Log could not be created in the directory. \n\nPlease browse to different location, or run as administrator.", "Squeaky - Error Log", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton8ActionPerformed
    private void handle(Exception ex) {
        try {
            stopFlag = true;
            mainProcess.interrupt();
            resetAll();
            StringBuilder errorTrace = new StringBuilder(0);
            for (StackTraceElement x : ex.getStackTrace()) {
                errorTrace = errorTrace.append(x.toString()).append(NEWLINE);
            }
            String msg = ex.getMessage();
            JOptionPane.showMessageDialog(jFrame1, "Oops! An error occured: " + msg + "\n For more details visit log.", "Squeaky - Error occured", JOptionPane.ERROR_MESSAGE);
            errorLog = new File(jTextField1.getText());
            errorLog.getParentFile().mkdirs();
            if (!errorLog.exists() && !errorLog.createNewFile()) {
                JOptionPane.showMessageDialog(jFrame1, "Cannot access specified location.\nRun as administrator or select different location.", "Squeaky - Unable to create error log", JOptionPane.ERROR_MESSAGE);
            }
            try (BufferedWriter errorWriter = new BufferedWriter(new FileWriter(errorLog, true))) {
                SimpleDateFormat format = new SimpleDateFormat("dd-MM-YYYY hh:mm:ss");
                errorWriter.write("Error occured at(DD/MM/YYYY): " + format.format(new Date().getTime()) + NEWLINE);
                errorWriter.write("Error Message(System): " + msg + NEWLINE);
                errorWriter.write("Details:" + NEWLINE);
                errorWriter.write(errorTrace.toString());
                errorWriter.write(NEWLINE + "___________________" + NEWLINE);
            }
        } catch (IOException ex1) {
            JOptionPane.showMessageDialog(jFrame1, "Please browse error log to different location, or run as administrator.", "Squeaky - Error Log invalid", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deleteFile(File a) {
        if (a.isDirectory()) {
            for (File x : a.listFiles()) {
                if (stopFlag) {
                    break;
                }
                if (!stopFlag) {
                    deleteFile(x);
                    a.delete();
                }
            }
        } else if (a.isFile()) {
            long totalSize = a.length();
            try (BufferedWriter fileEraser = new BufferedWriter(new FileWriter(a))) {
                for (long i = 0; i < totalSize; i++) {
                    if (stopFlag) {
                        indexBytesDone += i;
                        break;
                    }
                    fileEraser.write(0);
                }
            } catch (IOException ex) {
                handle(ex);
            }
            if (!stopFlag) {
                a.delete();
                indexBytesDone += totalSize;
            }
        }
    }

    private void enableDriveUIElements(boolean b) {
        for (JComponent x : DRIVEUIELEMENTS) {
            x.setEnabled(b);
        }
    }

    private void enableFileUIElements(boolean b) {
        for (JComponent x : FILEUIELEMENTS) {
            x.setEnabled(b);
        }
    }

    private void resetAll() {
        OBJECT.stopTimer();
        for (CountMS x : COUNTOBJECTS) {
            x.stopTimer();
        }
        jProgressBar2.setValue(0);
        jProgressBar3.setValue(0);
        COUNTOBJECTS.clear();
        //driveBytesDone = 0;
    }

    private void enableGUI(boolean b) {
        jButton4.setEnabled(false);
        jButton6.setEnabled(false);
        if (jRadioButton1.isSelected()) {
            enableFileUIElements(b);
        }
        if (jRadioButton2.isSelected()) {
            enableDriveUIElements(b);
        }
        jRadioButton1.setEnabled(b);
        jRadioButton2.setEnabled(b);
    }

    /**
     *
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            javax.swing.UIManager.setLookAndFeel("com.alee.laf.WebLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            JOptionPane.showMessageDialog(null, "An error occured while initiating UI.\n\n" + ex.getMessage() + "\n\nPlease check integrity of files.", "Squeaky - Fatal Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SqueakyForm().dispose();
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
